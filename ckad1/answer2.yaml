1
cat << EOF >> config.txt
> DB_URL=localhost:3306
> DB_USERNAME=postgres
> EOF
---
kubectl create cm db-config --from-file=config.txt
---
apiVersion: v1
kind: Pod
metadata:
  name: backend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
    env:
    - name:  
      valueFrom:
        configMapKeyRef:
          key:
          name:
    envFrom:
    - configMapRef:
        name: 
    
---
kubectl exec pod backend -it -- /bin/ls
echo
---
2
kubectl create secret db-credentials --from-literal=db-password=passwd
---
apiVersion: v1
kind: Pod
metadata:
  name:
spec:
  containers:
  - name:
    image:
    env:
    - name:
        valueFrom:
          secretKeyRef:
            name:
            key: 
---
3
apiVersion: v1
kind: Pod
metadata:
  name: test
spec:
  securityContext:
    fsGroup: 3000
  containers:
  - name:
    image:
    env:
    volumesMount:
    - mountPath: /data/app
      name: empty
  volumes:
  - name: empty
    emptyDir: {}
---
kubectl run secred --image=nginx --restart=Never --dry-run -o yaml
---
3
apiVersion: v1
kind: ResourceQuota
metadata:
  name: app
spec:
  hard:
    pods:
    requests.cpu:
    requests.memory:
---
apiVersion: v1
kind: Pod
metadata:
  name: app
spec:
  containers:
  - name:
    image:
  resources:
    requests:
      cpu: "3"
      memory: 600m
---
4
kubectl create sa backend-team
---
kubectl describe sa backend-team -o token
--- 
apiVersion:
kind:
metadata:
spec:
  containers:
  serviceAccount:
kubectl run nginx --image --restart --securityaccount=  

